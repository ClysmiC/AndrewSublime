[
	// --- Unbind some default bindings
	{ "keys": ["ctrl+h"], "command": "nop" },
	{ "keys": ["ctrl+w"], "command": "nop" }, // No more accidentally closing the window due to my emacs brain :)

	// --- Command palette
	{ "keys": ["ctrl+shift+p"], "command": "nop" },
	{ "keys": ["alt+h"], "command": "show_overlay", "args": {"overlay": "command_palette" } },

	// --- Console
	{ "keys": ["f1"], "command": "show_panel", "args": {"panel": "console", "toggle": true } },

	// --- Navigate cursor...
	//  to beginnning/end of line
	{ "keys": ["ctrl+a"], "command": "move_to", "args": {"to": "hardbol" } },
	{ "keys": ["ctrl+e"], "command": "move_to", "args": {"to": "hardeol" } },
	{ "keys": ["ctrl+shift+a"], "command": "move_to", "args": {"to": "hardbol", "extend": true } },
	{ "keys": ["ctrl+shift+e"], "command": "move_to", "args": {"to": "hardeol", "extend": true } },
	//  to begining/end of file
	{ "keys": ["alt+shift+,"], "command": "move_to", "args": {"to": "bof" } },
	{ "keys": ["alt+shift+."], "command": "move_to", "args": {"to": "eof" } },
	//  of open/close pair
	{ "keys": ["ctrl+up"], "command": "move", "args": {"by": "stops", "empty_line": true, "forward": false } },
	{ "keys": ["ctrl+down"], "command": "move", "args": {"by": "stops", "empty_line": true, "forward": true } },
	{ "keys": ["ctrl+shift+up"], "command": "move", "args": {"by": "stops", "empty_line": true, "forward": false, "extend": true } },
	{ "keys": ["ctrl+shift+down"], "command": "move", "args": {"by": "stops", "empty_line": true, "forward": true, "extend": true } },

	// --- Swap lines up/down
	{ "keys": ["alt+up"], "command": "swap_line_up" },
	{ "keys": ["alt+down"], "command": "swap_line_down" },

	// --- Delete entire line
	// TODO - move cursor upwards!
	{ "keys": ["ctrl+shift+backspace"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Delete Line.sublime-macro" } },

	// --- Select all
	{ "keys": ["ctrl+h", "h"], "command": "select_all" },

	// --- Switch active "buffer" (in sublime terms, "group")
	{ "keys": ["ctrl+h", "o"], "command": "focus_neighboring_group" },

	// --- Save
	{ "keys": ["ctrl+h", "s"], "command": "save", "args": { "async": true } },
	{ "keys": ["ctrl+h", "ctrl+s"], "command": "save_all", "args": { "async": true } },
	{ "keys": ["ctrl+h", "w"], "command": "prompt_save_as" },

	// --- Incremental search
	{ "keys": ["ctrl+s"], "command": "show_panel", "args": {"panel": "incremental_find", "reverse": false } },
	{ "keys": ["ctrl+r"], "command": "show_panel", "args": {"panel": "incremental_find", "reverse": true } },

	// --- Replace
	// TODO - y, n, !, . to replace next, skip next, replace all, and replace next + exit replace dialogue
	// TODO - reverse replace? Not sure if I even have that bound in emacs
	{ "keys": ["alt+r"], "command": "show_panel", "args": {"panel": "replace", "reverse": false } },

	// --- Test/scratchpad
	{ "keys": ["ctrl+space"], "command": "als_try_set_mark" },
	{ "keys": ["escape"], "command": "als_clear_selection", "context":
		[
			{ "key": "num_selections", "operator": "equal", "operand": 1 },
			{ "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true },
		]
	},

	// { "keys": ["ctrl+;"], "command": "als_test_input_handler" }
]
